import { select } from './utilities';

/**
 * modal class
 */
export default class Modal {
  constructor(selector, button) {
    this.el = select(selector);
    this.button = button;
    this.init();
  }

  /**
   * automatically init all modals in the page
   */
  static create() {
    const modals = Array.from(document.querySelectorAll('[data-do-modal]'));
    modals.forEach((modal) => {
      new Modal(document.querySelector(modal.dataset.doModal), modal);
    });
  }

 /**
  * add event listeners to the modal elements
  * @param {HTMLElement} button
  * @param {HTMLElement} element
  */
  init() {
    this.panel = this.el.querySelector('.modal-panel');
    this.dismiss = this.el.querySelector('.modal-dismiss');
    this.animating = false;

    this.initEvents();
  }

  initEvents() {
    this.button.addEventListener('click', this.show.bind(this), false);
    this.dismiss.addEventListener('click', this.hide.bind(this), false);

    this.el.addEventListener('click', (event) => {
      if (event.target === this.el) this.hide();
    }, false);
  }
  /**
   * show hidden modal
   */
  show() {
    this.animating = true;
    this.el.classList.remove('is-hidden');
    this.el.classList.add('motion', 'is-fade-in', 'is-visible');
    this.panel.classList.add('motion', 'is-fade-in-up');
    setTimeout(() => {
      this.el.classList.remove('is-fade-in');
      this.panel.classList.remove('is-fade-in-up');
      this.animating = false;
    }, 750);
  }

  /**
   * dismiss hidden modal
   */
  hide() {
    if (! this.animating) {
      this.animating = true;
      this.el.classList.add('is-fade-out');
      this.panel.classList.add('is-fade-out-up');
      setTimeout(() => {
        this.el.classList.remove('is-visible', 'is-fade-out');
        this.panel.classList.remove('is-fade-out-up');
        this.el.classList.add('is-hidden');
        this.animating = false;
      }, 750);
    }
  }
}
