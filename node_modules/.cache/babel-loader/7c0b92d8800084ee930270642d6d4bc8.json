{"remainingRequest":"/Users/killianpelletier/lagrume-builder/node_modules/thread-loader/dist/cjs.js!/Users/killianpelletier/lagrume-builder/node_modules/babel-loader/lib/index.js!/Users/killianpelletier/lagrume-builder/node_modules/eslint-loader/index.js??ref--12-0!/Users/killianpelletier/lagrume-builder/src/pwa.js","dependencies":[{"path":"/Users/killianpelletier/lagrume-builder/src/pwa.js","mtime":1554846638000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"/Users/killianpelletier/lagrume-builder/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _Array$from from \"/Users/killianpelletier/lagrume-builder/node_modules/@babel/runtime-corejs2/core-js/array/from\";\nimport \"core-js/modules/es6.function.name\";\nimport JSZip from 'jszip';\nimport saveAs from 'save-as';\nimport { getImageBlob, cleanDOM } from './util';\n/**\n * Adds a service worker that caches the static assets.\n */\n\nfunction createSW(output) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$images = _ref.images,\n      images = _ref$images === void 0 ? [] : _ref$images;\n\n  output.file('sw.js', \"\\n    const staticCacheName = 'bbuilder-static-v1';\\n\\n    self.addEventListener('install', function(event) {\\n      event.waitUntil(\\n        caches.open(staticCacheName).then(function(cache) {\\n          return cache.addAll([\\n            '/',\\n            '/assets/js/main.js',\\n            \".concat(images.map(function (i) {\n    return \"'/assets/img/\" + i.name + \"'\";\n  }).join(',').trim(','), \"\\n          ]);\\n        })\\n      );\\n    });\\n\\n    function serveAsset(request) {\\n      return caches.open(staticCacheName).then(function(cache) {\\n        return cache.match(request).then(function(response) {\\n          if (response) return response;\\n\\n          return fetch(request).then(function(networkResponse) {\\n            cache.put(request, networkResponse.clone());\\n            return networkResponse;\\n          });\\n        });\\n      });\\n    }\\n\\n    self.addEventListener('fetch', function(event) {\\n      const requestUrl = new URL(event.request.url);\\n\\n      if (requestUrl.origin === location.origin) {\\n        if (requestUrl.pathname === '/') {\\n          event.respondWith(caches.match('/'));\\n          return;\\n        }\\n        if (requestUrl.pathname.startsWith('/assets/')) {\\n          event.respondWith(serveAsset(event.request));\\n          return;\\n        }\\n      }\\n\\n      event.respondWith(\\n        caches.match(event.request).then(function(response) {\\n          return response || fetch(event.request);\\n        })\\n      );\\n    });\\n  \"));\n  var scripts = output.folder('assets/js');\n  scripts.file('main.js', \"\\n    function registerSW () {\\n      if (!navigator.serviceWorker) return;\\n      navigator.serviceWorker.register('/sw.js').then(function (reg) {\\n        console.log('SW registered!');\\n      });\\n    }\\n\\n    registerSW();\\n  \");\n}\n/**\n * Adds some PWA features.\n */\n\n\nfunction createPWA(output, payload) {\n  createSW(output, payload);\n}\n\nfunction download(assets) {\n  var frag = this.outputFragment();\n\n  var images = _Array$from(frag.querySelectorAll('img'));\n\n  var artboard = frag.querySelector('#artboard');\n  var title = document.title;\n  var zip = new JSZip();\n  var output = zip.folder('project');\n  var imgFolder = output.folder('assets/img');\n  var cssFolder = output.folder('assets/css');\n\n  _Promise.all(images.map(function (image) {\n    var imageLoader = getImageBlob(image.src);\n    return imageLoader.then(function (img) {\n      imgFolder.file(img.name, img.blob, {\n        base64: true\n      });\n      image.setAttribute('src', \"assets/img/\".concat(img.name));\n      return img;\n    });\n  })).then(function (images) {\n    createPWA(output, {\n      images: images\n    });\n  }).then(function () {\n    return new _Promise(function (resolve, reject) {\n      var assetsClient = new XMLHttpRequest();\n      assetsClient.open('GET', assets.css);\n\n      assetsClient.onload = function () {\n        resolve(this.response);\n      };\n\n      assetsClient.send(null);\n    }).then(function (content) {\n      cssFolder.file('app.css', content);\n      return content;\n    });\n  }).then(function () {\n    cleanDOM(frag);\n    output.file('index.html', \"<html>\\n          <head>\\n            <title>\".concat(title, \"</title>\\n            <link href=\\\"assets/css/app.css\\\" rel=\\\"stylesheet\\\">\\n          </head>\\n          <body>\\n            \").concat(artboard.innerHTML, \"\\n          <script src=\\\"/assets/js/main.js\\\"></script>\\n          </body>\\n        </html>\"));\n    zip.generateAsync({\n      type: 'blob'\n    }).then(function (blob) {\n      saveAs(blob, 'project.zip');\n    });\n  });\n}\n\nexport default function install(_ref2) {\n  var builder = _ref2.builder;\n  builder.download = download;\n}\n;",{"version":3,"sources":["/Users/killianpelletier/lagrume-builder/src/pwa.js"],"names":["JSZip","saveAs","getImageBlob","cleanDOM","createSW","output","images","file","map","i","name","join","trim","scripts","folder","createPWA","payload","download","assets","frag","outputFragment","querySelectorAll","artboard","querySelector","title","document","zip","imgFolder","cssFolder","all","image","imageLoader","src","then","img","blob","base64","setAttribute","resolve","reject","assetsClient","XMLHttpRequest","open","css","onload","response","send","content","innerHTML","generateAsync","type","install","builder"],"mappings":"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","sourcesContent":["import JSZip from 'jszip';\nimport saveAs from 'save-as';\nimport { getImageBlob, cleanDOM } from './util';\n\n/**\n * Adds a service worker that caches the static assets.\n */\nfunction createSW (output, { images = [] } = {}) {\n  output.file('sw.js', `\n    const staticCacheName = 'bbuilder-static-v1';\n\n    self.addEventListener('install', function(event) {\n      event.waitUntil(\n        caches.open(staticCacheName).then(function(cache) {\n          return cache.addAll([\n            '/',\n            '/assets/js/main.js',\n            ${images.map(i => \"'/assets/img/\" + i.name + \"'\").join(',').trim(',')}\n          ]);\n        })\n      );\n    });\n\n    function serveAsset(request) {\n      return caches.open(staticCacheName).then(function(cache) {\n        return cache.match(request).then(function(response) {\n          if (response) return response;\n\n          return fetch(request).then(function(networkResponse) {\n            cache.put(request, networkResponse.clone());\n            return networkResponse;\n          });\n        });\n      });\n    }\n\n    self.addEventListener('fetch', function(event) {\n      const requestUrl = new URL(event.request.url);\n\n      if (requestUrl.origin === location.origin) {\n        if (requestUrl.pathname === '/') {\n          event.respondWith(caches.match('/'));\n          return;\n        }\n        if (requestUrl.pathname.startsWith('/assets/')) {\n          event.respondWith(serveAsset(event.request));\n          return;\n        }\n      }\n\n      event.respondWith(\n        caches.match(event.request).then(function(response) {\n          return response || fetch(event.request);\n        })\n      );\n    });\n  `);\n\n  const scripts = output.folder('assets/js');\n  scripts.file('main.js', `\n    function registerSW () {\n      if (!navigator.serviceWorker) return;\n      navigator.serviceWorker.register('/sw.js').then(function (reg) {\n        console.log('SW registered!');\n      });\n    }\n\n    registerSW();\n  `);\n}\n\n/**\n * Adds some PWA features.\n */\nfunction createPWA (output, payload) {\n  createSW(output, payload);\n}\n\nfunction download (assets) {\n  const frag = this.outputFragment();\n  const images = Array.from(frag.querySelectorAll('img'));\n  const artboard = frag.querySelector('#artboard');\n  const title = document.title;\n  const zip = new JSZip();\n  const output = zip.folder('project');\n  const imgFolder = output.folder('assets/img');\n  const cssFolder = output.folder('assets/css');\n\n  Promise.all(images.map((image) => {\n    const imageLoader = getImageBlob(image.src);\n    return imageLoader.then((img) => {\n      imgFolder.file(img.name, img.blob, { base64: true });\n      image.setAttribute('src', `assets/img/${img.name}`);\n\n      return img;\n    });\n  })).then(images => {\n    createPWA(output, { images });\n  }).then(() => {\n    return new Promise((resolve, reject) => {\n      const assetsClient = new XMLHttpRequest();\n      assetsClient.open('GET', assets.css);\n      assetsClient.onload = function () {\n        resolve(this.response);\n      }\n      assetsClient.send(null);\n    }).then((content) => {\n      cssFolder.file('app.css', content);\n      return content;\n    });\n  }).then(() => {\n    cleanDOM(frag);\n    output.file('index.html',\n      `<html>\n          <head>\n            <title>${title}</title>\n            <link href=\"assets/css/app.css\" rel=\"stylesheet\">\n          </head>\n          <body>\n            ${artboard.innerHTML}\n          <script src=\"/assets/js/main.js\"></script>\n          </body>\n        </html>`);\n\n    zip.generateAsync({ type: 'blob' }).then((blob) => {\n      saveAs(blob, 'project.zip');\n    });\n  });\n}\n\nexport default function install ({ builder }) {\n  builder.download = download;\n};\n"]}]}