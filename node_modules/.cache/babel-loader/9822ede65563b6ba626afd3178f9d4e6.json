{"remainingRequest":"/Users/killianpelletier/lagrume-builder/node_modules/thread-loader/dist/cjs.js!/Users/killianpelletier/lagrume-builder/node_modules/babel-loader/lib/index.js!/Users/killianpelletier/lagrume-builder/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/killianpelletier/lagrume-builder/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/killianpelletier/lagrume-builder/src/Uploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/killianpelletier/lagrume-builder/src/Uploader.vue","mtime":1554846638000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/killianpelletier/lagrume-builder/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Uploader',\n  inject: ['$builder', '$section'],\n  props: {\n    path: {\n      type: String,\n      required: true\n    },\n    mode: {\n      default: 'input',\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      src: ''\n    };\n  },\n  created: function created() {\n    this.src = this.$section.get(this.path);\n  },\n  methods: {\n    updateImage: function updateImage() {\n      var file = this.$refs.uploader.files[0];\n      if (!file) return;\n      var imageURL = URL.createObjectURL(file);\n      this.src = imageURL;\n      this.$section.set(this.path, imageURL);\n    }\n  }\n};",{"version":3,"sources":["Uploader.vue"],"names":[],"mappings":";;;;;;;;;;;AAYA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,CAFA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,OAAA,EAAA,OADA;AAEA,MAAA,IAAA,EAAA;AAFA;AALA,GAHA;AAaA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,GAAA,EAAA;AADA,KAAA;AAAA,GAbA;AAgBA,EAAA,OAhBA,qBAgBA;AACA,SAAA,GAAA,GAAA,KAAA,QAAA,CAAA,GAAA,CAAA,KAAA,IAAA,CAAA;AACA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,UAAA,CAAA,IAAA,EAAA;AACA,UAAA,QAAA,GAAA,GAAA,CAAA,eAAA,CAAA,IAAA,CAAA;AAEA,WAAA,GAAA,GAAA,QAAA;AACA,WAAA,QAAA,CAAA,GAAA,CAAA,KAAA,IAAA,EAAA,QAAA;AACA;AARA;AAnBA,CAAA","sourcesContent":["<template lang=\"pug\">\n  div.uploader\n    img(:src=\"src\")\n    input.uploader-input(\n      type=\"file\"\n      ref=\"uploader\"\n      @change=\"updateImage\"\n      v-if=\"$builder.isEditing && mode === 'input'\"\n    )\n</template>\n\n<script>\nexport default {\n  name: 'Uploader',\n  inject: ['$builder', '$section'],\n  props: {\n    path: {\n      type: String,\n      required: true\n    },\n    mode: {\n      default: 'input',\n      type: String\n    }\n  },\n  data: () => ({\n    src: ''\n  }),\n  created () {\n    this.src = this.$section.get(this.path);\n  },\n  methods: {\n    updateImage () {\n      const file = this.$refs.uploader.files[0];\n      if (!file) return;\n      const imageURL = URL.createObjectURL(file);\n\n      this.src = imageURL;\n      this.$section.set(this.path, imageURL);\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n\n.uploader\n  position: relative\n  cursor: pointer\n  outline: none\n  &-input\n    position: absolute\n    top: 0\n    right: 0\n    bottom: 0\n    left: 0\n    width: 100%\n    opacity: 0\n    z-index: 100\n    cursor: pointer\n  >img\n    width: 100%\n    display: block\n  &:hover\n    box-shadow: 0 0 0 2px $gray\n</style>\n"],"sourceRoot":"src"}]}